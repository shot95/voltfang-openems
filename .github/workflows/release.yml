name: Prepare OpenEMS Release

on:
  push:
    tags:
      - "*.*.*"
    #branches:
    #  - dev/cl/github.action.release
  
jobs:
  build-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - uses: kiancross/checkstyle-annotations-action@v1
      - name: Log git github.sha
        run: echo "github.sha ${{github.sha}}"
      - name: Log git ref
        run: echo "github.ref  ${{github.ref}}"
      - name: Log git ref_name
        run: echo "github.ref_name ${{github.ref_name}}"
      - name: Log git comment github.event.head_commit
        run: echo "git comment ${{github.event.head_commit.message}}"

      - name: Validate BackendApp.bndrun and EdgeApp.bndrun
        run: git diff --exit-code io.openems.backend.application/BackendApp.bndrun  io.openems.edge.application/EdgeApp.bndrun

      - name: Clean Edge+Backend assets
        run: ./gradlew cleanEdge cleanBackend

      - name: Build all Java packages
        run: ./gradlew build

      - name: Resolve OpenEMS bundles
        run: ./gradlew resolve

      - name: Prepare Edge+Backend assets
        run: ./gradlew buildEdge buildBackend

      - name: Save build-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/openems-edge.jar
            build/openems-backend.jar

  build-ui:
    runs-on: ubuntu-latest
    # remove if you always want to build UI 
    if: startsWith(github.ref, 'refs/do-not-build-ui/')
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup Cache for Node.js
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.ng
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Build OpenEMS UI
        run: |
          cd ui
          npm install 
          npm ci --prefer-offline --cache ~/.npm
          node_modules/.bin/ng config cli.cache.path "~/.ng"
          node_modules/.bin/ng build -c "openems,openems-edge-prod,prod"

      - name: Prepare UI asset
        #if: startsWith(github.ref, 'refs/tags/')
        if: startsWith(github.ref, 'refs/do-not-build-ui/')
        run: |
          mkdir build
          cd ui/target
          zip -r ../../build/openems-ui.zip ./*

      - name: Save build-artifacts
        #if: startsWith(github.ref, 'refs/tags/')
        if: startsWith(github.ref, 'refs/do-not-build-ui/')
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/openems-ui.zip

  release:
    runs-on: ubuntu-latest
    #needs: [build-java, build-ui]
    needs: [build-java]
    steps:
      - name: Load build-artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: |
            build/openems-edge.jar
            build/openems-backend.jar
            #build/openems-ui.zip

  # Create debian package for OpenEMS Edge
  debpackage:
    runs-on: ubuntu-latest
    needs: [build-java]
    steps:
    - uses: actions/checkout@v3
    - name: Load build-artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: build
    - name: Install build-essential and cmake
      run: sudo apt-get install build-essential cmake -y
    - name: cmake build
      run: cmake -DGITSHA="${{github.sha}}" -DGITREF="${{github.ref}}" -DGITRNAME="${{github.ref_name}}" -DGITCOMMENT="${{github.event.head_commit.message}}" -Bbuild -H.
    - name: cmake make
      run: cmake --build build/ --target all
    - name: cpack
      run: cpack -G DEB --config build/CPackConfig.cmake

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        files: |
          build/*.deb
